{{- $image := .Values.image.zeek_container_override | default (printf "%s/zeek:%s" .Values.image.repository .Chart.AppVersion) }}
{{- $dirinit_image := .Values.image.dirinit_container_override | default (printf "%s/dirinit:%s" .Values.image.repository .Chart.AppVersion) }}
{{- if .Values.capture_mode == "live" }}
---
apiVersion: v1
data:
  EXTRACT_FILES_PATH: /zeek/extract_files
  ZEEK_INTEL_PATH: /opt/zeek/share/zeek/site/intel
  ZEEK_LIVE_CAPTURE: "true"
  ZEEK_LOG_PATH: "/zeek/live"
  ZEEK_PCAP_PROCESSOR: "false"
  # Set ZEEK_DISABLE_STATS to blank to generate stats.log and capture_loss.log
  ZEEK_DISABLE_STATS: "{{ .Values.zeek_live.zeek_disable_stats }}"
  {{- if .Values.is_production }}
    {{- with .Values.zeek_live.production }}
  ZEEK_LB_PROCS_WORKER_DEFAULT: "{{ .zeek_lb_procs_worker_default }}"
  ZEEK_LB_PROCS: "{{ .zeek_lb_procs }}"
  WORKER_LB_PROCS: "{{ .worker_lb_procs }}"
  ZEEK_LB_METHOD: "{{ .zeek_lb_method }}"
  ZEEK_AF_PACKET_BUFFER_SIZE: "{{ .zeek_af_packet_buffer_size }}"
  ZEEK_PIN_CPUS_WORKER_1: "{{ .zeek_pin_cpus_worker_1 }}"
    {{- end }}
  {{- else }}
    {{- with .Values.zeek_live.development }}
  ZEEK_LB_PROCS_WORKER_DEFAULT: "{{ .zeek_lb_procs_worker_default }}"
  ZEEK_LB_PROCS: "{{ .zeek_lb_procs }}"
  WORKER_LB_PROCS: "{{ .worker_lb_procs }}"
  ZEEK_LB_METHOD: "{{ .zeek_lb_method }}"
  ZEEK_AF_PACKET_BUFFER_SIZE: "{{ .zeek_af_packet_buffer_size }}"
  ZEEK_PIN_CPUS_WORKER_1: "{{ .zeek_pin_cpus_worker_1 }}"
    {{- end }}
  {{- end }}
kind: ConfigMap
metadata:
  name: zeek-live-env

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: zeek-live-daemonset
spec:
  selector:
    matchLabels:
      name: zeek-live-daemonset
  template:
    metadata:
      labels:
        name: zeek-live-daemonset
    spec:
      # Required for coredns to work with hostnetwork set to true.
      serviceAccountName: {{ .Values.zeek_chart_overrides.serviceAccountName | default "default" }}
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      nodeSelector:
{{ toYaml .Values.zeek_live.nodeSelector | indent 8 }}
{{- with .Values.live_capture.tolerations }}
      tolerations:
{{ toYaml . | indent 6 }}
{{- end }}
      containers:
      - name: zeek-container
        image: "{{ $image }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        stdin: false
        tty: true
        securityContext:
          capabilities:
            add:
              # NET_ADMIN and NET_RAW - to turn on promiscuous mode and capture raw packets
              - NET_ADMIN
              - NET_RAW
              # SYS_NICE - to set process nice values, real-time scheduling policies, I/O scheduling
              - SYS_NICE
        envFrom:
          {{- if ne (len .Values.zeek_live.extra_envFrom) 0 }}
          {{- toYaml .Values.zeek_live.extra_envFrom | nindent 10 }}
          {{- end }}
          - configMapRef:
              name: process-env
          - configMapRef:
              name: ssl-env
          - configMapRef:
              name: upload-common-env
          - configMapRef:
              name: zeek-env
          {{- if .Values.kafka.enabled }}
          - configMapRef:
              name: kafka-config
          {{- end }}
          - secretRef:
              name: zeek-secret-env
          - configMapRef:
              name: zeek-live-env
          - configMapRef:
              name: pcap-capture-env
        livenessProbe:
          exec:
            command:
            - /usr/local/bin/container_health.sh
          initialDelaySeconds: 600
          periodSeconds: 60
          timeoutSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        env:
          {{- if ne (len .Values.zeek_live.extra_env) 0 }}
          {{- toYaml .Values.zeek_live.extra_env | nindent 10 }}
          {{- end }}
          - name: ZEEK_DISABLED
            value: "false"
          - name: PCAP_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        volumeMounts:
          - mountPath: /var/local/ca-trust/configmap
            name: zeek-live-var-local-catrust-volume
          - mountPath: "/zeek/extract_files"
            name: zeek-live-zeek-volume
            subPath: "extract_files"
          - mountPath: "/zeek/live"
            name: zeek-live-logs-volume
            subPath: "live"
          - mountPath: "/opt/zeek/share/zeek/site/intel-preseed/configmap"
            name: zeek-live-intel-preseed-volume
          - mountPath: "/opt/zeek/share/zeek/site/intel"
            name: zeek-intel-volume
            subPath: "zeek/intel"
          {{- if ne (len .Values.zeek_chart_overrides.live_volumeMounts) 0 }}
          {{- toYaml .Values.zeek_chart_overrides.live_volumeMounts | nindent 10 }}
          {{- else }}
          - mountPath: "/opt/zeek/share/zeek/site/custom/configmap"
            name: zeek-custom-volume
          {{- end }}
      initContainers:
      {{- if ne (len .Values.zeek_chart_overrides.extra_init_containers) 0 }}
      {{- toYaml .Values.zeek_chart_overrides.extra_init_containers | nindent 6 }}
      {{- end }}
      - name: zeek-live-dirinit-container
        image: "{{ $dirinit_image }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        stdin: false
        tty: true
        securityContext:
          runAsGroup: 0
          runAsUser: 0
        envFrom:
          - configMapRef:
              name: process-env
        env:
          - name: PUSER_MKDIR
            value: "/zeek-live-logs:live/logs;/data/config:zeek/intel/Mandiant,zeek/intel/MISP,zeek/intel/STIX;/data/zeek-logs:current,extract_files/preserved,extract_files/quarantine,live,processed,upload"
        volumeMounts:
          - name: zeek-intel-volume
            mountPath: "/data/config"
          - name: zeek-live-logs-volume
            mountPath: "/zeek-live-logs"
          - name: zeek-live-zeek-volume
            mountPath: "/data/zeek-shared"
      volumes:
        - name: zeek-live-var-local-catrust-volume
          configMap:
            name: var-local-catrust
        - name: zeek-live-zeek-volume
          persistentVolumeClaim:
            claimName: zeek-claim
        - name: zeek-live-intel-preseed-volume
          configMap:
            name: zeek-intel-preseed
        - name: zeek-intel-volume
          persistentVolumeClaim:
            claimName: config-claim
        - name: zeek-live-logs-volume
          hostPath:
            path: "{{ .Values.zeek_live.zeek_log_path }}"
            type: DirectoryOrCreate
        {{- if ne (len .Values.zeek_chart_overrides.live_volumes) 0 }}
        {{- toYaml .Values.zeek_chart_overrides.live_volumes | nindent 8 }}
        {{- else }}
        - name: zeek-custom-volume
          configMap:
            name: zeek-custom
        {{- end }}
{{- end }}
