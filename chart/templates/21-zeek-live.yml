{{- $image := .Values.image.zeek_container_override | default (printf "%s/zeek:%s" .Values.image.repository .Chart.AppVersion) }}

{{- if .Values.zeek_live.enabled }}
---
apiVersion: v1
data:
  EXTRACT_FILES_PATH: /zeek/extract_files
  ZEEK_CRON: "true"
  ZEEK_INTEL_PATH: /opt/zeek/share/zeek/site/intel
  ZEEK_LIVE_CAPTURE: "true"
  ZEEK_LOG_PATH: "/zeek-live-logs/live"
  ZEEK_PCAP_PROCESSOR: "false"
  # Set ZEEK_DISABLE_STATS to blank to generate stats.log and capture_loss.log
  ZEEK_DISABLE_STATS: "{{ .Values.zeek_live.zeek_disable_stats }}"
  {{- if .Values.is_production }}
    {{- with .Values.zeek_live.production }}
  ZEEK_LB_PROCS: "{{ .zeek_lb_procs }}"
  WORKER_LB_PROCS: "{{ .worker_lb_procs }}"
  ZEEK_LB_METHOD: "{{ .zeek_lb_method }}"
  ZEEK_AF_PACKET_BUFFER_SIZE: "{{ .zeek_af_packet_buffer_size }}"
    {{- end }}
  {{- else }}
    {{- with .Values.zeek_live.development }}
  ZEEK_LB_PROCS: "{{ .zeek_lb_procs }}"
  WORKER_LB_PROCS: "{{ .worker_lb_procs }}"
  ZEEK_LB_METHOD: "{{ .zeek_lb_method }}"
  ZEEK_AF_PACKET_BUFFER_SIZE: "{{ .zeek_af_packet_buffer_size }}"
    {{- end }}
  {{- end }}
kind: ConfigMap
metadata:
  name: zeek-live-env

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: zeek-live-daemonset
spec:
  selector:
    matchLabels:
      name: zeek-live-daemonset
  template:
    metadata:
      labels:
        name: zeek-live-daemonset
    spec:
      # Required for coredns to work with hostnetwork set to true.
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      nodeSelector:
{{ toYaml .Values.zeek_live.nodeSelector | indent 8 }}
      tolerations:
{{ toYaml .Values.live_capture.tolerations | indent 6 }}
      containers:
      - name: zeek-live-container
        image: "{{ $image }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        stdin: false
        tty: true
        securityContext:
          capabilities:
            add:
              # NET_ADMIN and NET_RAW - to turn on promiscuous mode and capture raw packets
              - NET_ADMIN
              - NET_RAW
              # SYS_NICE - to set process nice values, real-time scheduling policies, I/O scheduling
              - SYS_NICE
        envFrom:
          - configMapRef:
              name: process-env
          - configMapRef:
              name: ssl-env
          - configMapRef:
              name: upload-common-env
          - configMapRef:
              name: zeek-env
          - secretRef:
              name: zeek-secret-env
          - configMapRef:
              name: zeek-live-env
          - configMapRef:
              name: pcap-capture-env
        env:
          - name: ZEEK_DISABLED
            value: "false"
          - name: PCAP_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        volumeMounts:
          - mountPath: /var/local/ca-trust/configmap
            name: zeek-live-var-local-catrust-volume
          - mountPath: "/zeek/extract_files"
            name: zeek-live-zeek-volume
            subPath: "extract_files"
          - mountPath: "/zeek/upload"
            name: zeek-live-zeek-volume
            subPath: "upload"
          - mountPath: "/zeek-live-logs"
            name: zeek-live-logs-volume
          {{- if not .Values.rule_mount_override.enabled }}
          - mountPath: "/opt/zeek/share/zeek/site/custom/configmap"
            name: zeek-live-custom-volume
          {{- end }}
          - mountPath: "/opt/zeek/share/zeek/site/intel-preseed/configmap"
            name: zeek-live-intel-preseed-volume
          - mountPath: "/opt/zeek/share/zeek/site/intel"
            name: zeek-live-intel-volume
            subPath: "zeek/intel"
      initContainers:
      - name: zeek-live-dirinit-container
        image: "{{ .Values.image.repository }}/dirinit:{{ .Values.image.dirinit_tag | default .Chart.AppVersion }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        stdin: false
        tty: true
        envFrom:
          - configMapRef:
              name: process-env
        env:
          - name: PUSER_MKDIR
            value: "/data/config:zeek/intel/MISP,zeek/intel/STIX;/data/zeek-shared:current,extract_files/preserved,extract_files/quarantine,processed,upload;/zeek-live-logs:live"
        volumeMounts:
          - name: zeek-live-intel-volume
            mountPath: "/data/config"
          - name: zeek-live-logs-volume
            mountPath: "/zeek-live-logs"
          - name: zeek-live-zeek-volume
            mountPath: "/data/zeek-shared"
      volumes:
        - name: zeek-live-var-local-catrust-volume
          configMap:
            name: var-local-catrust
        - name: zeek-live-zeek-volume
          persistentVolumeClaim:
            claimName: zeek-claim
        {{- if not .Values.rule_mount_override.enabled }}
        - name: zeek-live-custom-volume
          configMap:
            name: zeek-custom
        {{- end }}
        - name: zeek-live-intel-preseed-volume
          configMap:
            name: zeek-intel-preseed
        - name: zeek-live-intel-volume
          persistentVolumeClaim:
            claimName: config-claim
        - name: zeek-live-logs-volume
          hostPath:
            path: "{{ .Values.zeek_live.zeek_log_path }}"
            type: DirectoryOrCreate
{{- end }}
