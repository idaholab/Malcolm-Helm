---
apiVersion: v1
data:
  .gitignore: |+
    *
    !.gitignore

  single_session_no_spi.yml: |
    ---
    version: 1
    rules:
      - name: "Dont save SPI sessions with only 1 source packet"
        when: "beforeFinalSave"
        fields:
          packets.src: 1
          packets.dst: 0
          tcpflags.syn: 1
        ops:
          _dontSaveSPI: 1
  ssh_trunate.yml: |
    ---
    version: 1
    rules:
      - name: "Only save first n packets of SSH"
        when: "fieldSet"
        fields:
          protocols:
          - ssh
        ops:
          _maxPacketsToSave: 20
  tls_trunate.yml: |
    ---
    version: 1
    rules:
      - name: "Only save first n packets of TLS"
        when: "fieldSet"
        fields:
          protocols:
          - tls
        ops:
          _maxPacketsToSave: 15
kind: ConfigMap
metadata:
  name: arkime-rules
  namespace: malcolm

---
apiVersion: v1
data:
  # Whether or not Arkime should analyze uploaded PCAP files
  ARKIME_AUTO_ANALYZE_PCAP_FILES: "true"
  # Whether or not Arkime should analyze captured PCAP files captured
  #   by netsniff-ng/tcpdump (see PCAP_ENABLE_NETSNIFF and PCAP_ENABLE_TCPDUMP
  #   below). If ARKIME_LIVE_CAPTURE is true, this should be false: otherwise
  #   Arkime will see duplicate traffic.
  ARKIME_ROTATED_PCAP: "true"
  ARKIME_PCAP_PROCESSOR: "true"
  ARKIME_AUTO_ANALYZE_PCAP_THREADS: "1"
  VIEWER: "on"
  WISE: "on"
kind: ConfigMap
metadata:
  name: arkime-offline-env

---
apiVersion: v1
data:
  ARKIME_VIEWER_PORT: "8005"
  # Whether or not Arkime is allowed to delete uploaded/captured PCAP
  #   https://arkime.com/faq#pcap-deletion
  MANAGE_PCAP_FILES: "true"
  OPENSEARCH_MAX_SHARDS_PER_NODE: "2500"
  ARKIME_DEBUG_LEVEL: "{{ .Values.arkime_env.arkime_debug_level }}"
{{- if .Values.is_production }}
  {{- with .Values.arkime_env.production }}
  ARKIME_FREESPACEG: "{{ .free_space_g }}"
  ARKIME_ROTATE_INDEX: "{{ .rotate_index }}"
  INDEX_MANAGEMENT_ENABLED: "{{ .index_management_enabled }}"
  INDEX_MANAGEMENT_OPTIMIZATION_PERIOD: "{{ .index_management_optimization_period }}"
  INDEX_MANAGEMENT_RETENTION_TIME: "{{ .index_management_retention_time }}"
  INDEX_MANAGEMENT_OLDER_SESSION_REPLICAS: "{{ .index_management_older_session_replicas }}"
  INDEX_MANAGEMENT_HISTORY_RETENTION_WEEKS: "{{ .index_management_history_retention_weeks }}"
  INDEX_MANAGEMENT_SEGMENTS: "{{ .index_management_segments }}"
  INDEX_MANAGEMENT_HOT_WARM_ENABLED: "{{ .index_management_hot_warm_enabled }}"
  {{- end }}
{{- else }}
  {{- with .Values.arkime_env.development }}
  ARKIME_FREESPACEG: "{{ .free_space_g }}"
  ARKIME_ROTATE_INDEX: "{{ .rotate_index }}"
  INDEX_MANAGEMENT_ENABLED: "{{ .index_management_enabled }}"
  INDEX_MANAGEMENT_OPTIMIZATION_PERIOD: "{{ .index_management_optimization_period }}"
  INDEX_MANAGEMENT_RETENTION_TIME: "{{ .index_management_retention_time }}"
  INDEX_MANAGEMENT_OLDER_SESSION_REPLICAS: "{{ .index_management_older_session_replicas }}"
  INDEX_MANAGEMENT_HISTORY_RETENTION_WEEKS: "{{ .index_management_history_retention_weeks }}"
  INDEX_MANAGEMENT_SEGMENTS: "{{ .index_management_segments }}"
  INDEX_MANAGEMENT_HOT_WARM_ENABLED: "{{ .index_management_hot_warm_enabled }}"
  {{- end }}
{{- end }}
kind: ConfigMap
metadata:
  name: arkime-env

---
apiVersion: v1
data:
  MAXMIND_GEOIP_DB_LICENSE_KEY: MA==
  ARKIME_PASSWORD_SECRET: "{{ .Values.auth.arkime_password | b64enc }}"
kind: Secret
metadata:
  name: arkime-secret-env
type: Opaque
{{- if .Values.arkime_live.enabled }}
---
apiVersion: v1
data:
  # Whether or Arkime should monitor live traffic on a local
  #   interface (PCAP_IFACE in pcap-capture.env specifies interface)
  ARKIME_LIVE_CAPTURE: "true"
  ARKIME_MAGIC_MODE: basic
  #How many packets per packet thread that can be waiting to be processed. Arkime will start dropping packets if the queue fills up.
  ARKIME_PCAP_WRITE_METHOD: "simple"
  ARKIME_PCAP_READ_METHOD: tpacketv3
  ARKIME_PCAP_PROCESSOR: "false"
  {{- if .Values.is_production }}
    {{- with .Values.arkime_live.production }}
  # Live capture tuning parameters
  #(since 4.0.0) The type of seekable compression to use on pcap files. Zstd (don't use before 4.5.1) will has better compression for less cpu than glib. Valid values are: none, gzip, zstd (>= 4.5.1)
  ARKIME_COMPRESSION_TYPE: "{{ .arkime_compression_type }}"
  ARKIME_COMPRESSION_LEVEL: "{{ .arkime_compression_level }}"
  #Size of indexing request to send to OpenSearch/Elasticsearch. Increase if monitoring a high bandwidth network.
  ARKIME_DB_BULK_SIZE: "{{ .arkime_db_bulk_size }}"
  #How many packets per packet thread that can be waiting to be processed. Arkime will start dropping packets if the queue fills up.
  ARKIME_MAX_PACKETS_IN_QUEUE: "{{ .arkime_max_packets_in_queue }}"
  #Number of threads to use to process packets AFTER the reader has received the packets. This also controls how many packet queues there are, since each thread has its own queue. Basically how much CPU to dedicate to parsing the packets. Increase this if you get errors about dropping packets or the packetQ is over flowing. If using the simple writer, this also controls how many pcap files are open for writing. We recommend about 2 x Gbps. Making this value too large may cause issues with Arkime.
  ARKIME_PACKET_THREADS: "{{ .arkime_packet_threads }}"
  #Buffer size when writing pcap files. Should be a multiple of the raid 5/xfs stripe size and multiple of 4096 if using direct/thread-direct pcapWriteMethod
  ARKIME_PCAP_WRITE_SIZE: "{{ .arkime_pcap_write_size }}"
  #The number of threads used to read packets from each interface. These threads take the packets from the AF packet interface and place them into the packet queues.
  ARKIME_TPACKETV3_NUM_THREADS: "{{ .arkime_tpacketv3_num_threads }}"
  #The block size in bytes used for reads from each interface. There are 120 blocks per interface.
  ARKIME_TPACKETV3_BLOCK_SIZE: "{{ .arkime_tpacketv3_block_size }}"
    {{- end }}
  {{- else }}
    {{- with .Values.arkime_live.development }}
  ARKIME_COMPRESSION_TYPE: "{{ .arkime_compression_type }}"
  ARKIME_COMPRESSION_LEVEL: "{{ .arkime_compression_level }}"
  ARKIME_DB_BULK_SIZE: "{{ .arkime_db_bulk_size }}"
  ARKIME_MAX_PACKETS_IN_QUEUE: "{{ .arkime_max_packets_in_queue }}"
  ARKIME_PACKET_THREADS: "{{ .arkime_packet_threads }}"
  ARKIME_PCAP_WRITE_SIZE: "{{ .arkime_pcap_write_size }}"
  ARKIME_TPACKETV3_NUM_THREADS: "{{ .arkime_tpacketv3_num_threads }}"
  ARKIME_TPACKETV3_BLOCK_SIZE: "{{ .arkime_tpacketv3_block_size }}"
    {{- end }}
  {{- end }}

  VIEWER: "on"
  WISE: "off"
kind: ConfigMap
metadata:
  name: arkime-live-env
{{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: arkime-live-shell-override
data:
  command_override.sh: |
    #!/bin/bash
    sed -i 's/NODE_NAME=${PCAP_NODE_NAME:-"malcolm"}-live/NODE_NAME=${PCAP_NODE_NAME}/' /opt/live_capture.sh
    sed -i 's/NODE_HOST=${ARKIME_LIVE_NODE_HOST:-""}/NODE_HOST=${NODE_NAME}/' /opt/live_capture.sh
    /usr/bin/tini -- /usr/local/bin/docker-uid-gid-setup.sh /usr/local/bin/service_check_passthrough.sh -s arkime /opt/docker_entrypoint.sh
    /usr/bin/supervisord -c /etc/supervisord.conf -n