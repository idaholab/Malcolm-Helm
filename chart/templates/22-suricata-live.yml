{{- if .Values.suricata_live.enabled }}
---
apiVersion: v1
data:
  # Whether or not Suricata should monitor live traffic on a local
  #   interface (PCAP_IFACE variable below specifies capture interfaces)
  SURICATA_LIVE_CAPTURE: "true"
  SURICATA_PCAP_PROCESSOR: "false"
  # Specifies the Suricata runmode for live capture (see
  #   https://suricata.readthedocs.io/en/latest/performance/runmodes.html)
  SURICATA_RUNMODE: workers
  # Whether or not enable capture statistics and include them in eve.json
  SURICATA_STATS_ENABLED: "{{ .Values.suricata_live.suricata_stats_enabled }}"
  SURICATA_STATS_EVE_ENABLED: "{{ .Values.suricata_live.suricata_stats_enabled }}"
  SURICATA_STATS_INTERVAL: "30"
  SURICATA_STATS_DECODER_EVENTS: "false"
{{- if .Values.is_production }}
  {{- with .Values.suricata_live.production }}
  SURICATA_AF_PACKET_IFACE_THREADS: "{{ .af_packet_iface_threads }}"
  SURICATA_AF_PACKET_RING_SIZE: "{{ .af_packet_ring_size }}"
  SURICATA_MAX_PENDING_PACKETS: "{{ .max_pending_packets }}"
  SURICATA_STREAM_MEMCAP: "{{ .stream_memcap }}"
  SURICATA_HOST_MEMCAP: "{{ .host_memcap }}"
  SURICATA_DEFRAG_MEMCAP: "{{ .defrag_memcap }}"
  SURICATA_FTP_MEMCAP: "{{ .ftp_memcap }}"
  SURICATA_STREAM_REASSEMBLY_MEMCAP: "{{ .stream_reassembly_memcap }}"
  SURICATA_FLOW_MEMCAP: "{{ .flow_memcap }}"
  SURICATA_EVE_THREADED: "{{ .eve_threaded }}"
  SURICATA_EVE_ROTATE_INTERVAL: "{{ .eve_rotate_interval }}"
  {{- end }}
{{- else }}
  {{- with .Values.suricata_live.development }}
  SURICATA_AF_PACKET_IFACE_THREADS: "{{ .af_packet_iface_threads }}"
  SURICATA_AF_PACKET_RING_SIZE: "{{ .af_packet_ring_size }}"
  SURICATA_MAX_PENDING_PACKETS: "{{ .max_pending_packets }}"
  SURICATA_STREAM_MEMCAP: "{{ .stream_memcap }}"
  SURICATA_HOST_MEMCAP: "{{ .host_memcap }}"
  SURICATA_DEFRAG_MEMCAP: "{{ .defrag_memcap }}"
  SURICATA_FTP_MEMCAP: "{{ .ftp_memcap }}"
  SURICATA_STREAM_REASSEMBLY_MEMCAP: "{{ .stream_reassembly_memcap }}"
  SURICATA_FLOW_MEMCAP: "{{ .flow_memcap }}"
  SURICATA_EVE_THREADED: "{{ .eve_threaded }}"
  SURICATA_EVE_ROTATE_INTERVAL: "{{ .eve_rotate_interval }}"
  {{- end }}
{{- end }}
kind: ConfigMap
metadata:
  name: suricata-live-env

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: suricata-live-daemonset
spec:
  selector:
    matchLabels:
      name: suricata-live-daemonset
  template:
    metadata:
      labels:
        name: suricata-live-daemonset
    spec:
      serviceAccountName: {{ .Values.suricata_chart_overrides.serviceAccountName | default "default" }}
      # Required for coredns to work with hostnetwork set to true.
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      nodeSelector:
{{ toYaml .Values.suricata_live.nodeSelector | indent 8 }}
      tolerations:
{{ toYaml .Values.live_capture.tolerations | indent 6 }}
      containers:
      - name: suricata-container
        image: "{{ .Values.image.repository }}/suricata:{{ .Values.image.suricata_tag | default .Chart.AppVersion }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        stdin: false
        tty: true
        securityContext:
          capabilities:
            add:
              # IPC_LOCK - to lock memory, preventing swapping
              - IPC_LOCK
              # SYS_RESOURCE - for increasing memlock limits
              - SYS_RESOURCE
              # NET_ADMIN and NET_RAW - to turn on promiscuous mode and capture raw packets
              - NET_ADMIN
              - NET_RAW
              # SYS_NICE - to set process nice values, real-time scheduling policies, I/O scheduling
              - SYS_NICE
        envFrom:
          - configMapRef:
              name: process-env
          - configMapRef:
              name: ssl-env
          - configMapRef:
              name: upload-common-env
          - configMapRef:
              name: suricata-env
          - configMapRef:
              name: suricata-live-env
          - configMapRef:
              name: pcap-capture-env
        env:
          - name: SURICATA_DISABLED
            value: "false"
          - name: PCAP_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        volumeMounts:
          {{- if ne (len .Values.suricata_chart_overrides.live_volumeMounts) 0 }}
          {{- toYaml .Values.suricata_chart_overrides.live_volumeMounts | nindent 10 }}
          {{- else }}
          - mountPath: /var/local/ca-trust/configmap
            name: suricata-live-var-local-catrust-volume
          - mountPath: /var/log/suricata
            name: suricata-live-suricata-logs-volume
          - mountPath: "/opt/suricata/rules/configmap"
            name: suricata-custom-rules-volume
          - mountPath: "/opt/suricata/include-configs/configmap"
            name: suricata-custom-configs-volume
          {{- end }}
      {{- if ne (len .Values.suricata_chart_overrides.sideCars) 0 }}
      {{- toYaml .Values.suricata_chart_overrides.sideCars | nindent 6 }}
      {{- end }}
      initContainers:
      - name: suricata-live-dirinit-container
        image: "{{ .Values.image.repository }}/dirinit:{{ .Values.image.dirinit_tag | default .Chart.AppVersion }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        stdin: false
        tty: true
        envFrom:
          - configMapRef:
              name: process-env
        env:
          - name: PUSER_MKDIR
            value: "/data/suricata-logs:live"
        volumeMounts:
          - name: suricata-live-suricata-logs-volume
            mountPath: "/data/suricata-logs"
      volumes:
        {{- if ne (len .Values.suricata_chart_overrides.live_volumes) 0 }}
        {{- toYaml .Values.suricata_chart_overrides.live_volumes | nindent 8 }}
        {{- else }}
        - name: suricata-live-var-local-catrust-volume
          configMap:
            name: var-local-catrust
        - name: suricata-live-suricata-logs-volume
          hostPath:
            path: "{{ .Values.suricata_live.suricata_log_path }}"
            type: DirectoryOrCreate
        - name: suricata-custom-rules-volume
          configMap:
            name: suricata-rules
        - name: suricata-custom-configs-volume
          configMap:
            name: suricata-configs
        {{- end }}
{{- end }}
