{{- $dirinit_image := .Values.image.dirinit_container_override | default (printf "%s/dirinit:%s" .Values.image.repository .Chart.AppVersion) }}
{{- $netbox_image := .Values.image.netbox_container_override | default (printf "%s/netbox:%s" .Values.image.repository .Chart.AppVersion) }}
{{- if eq .Values.netbox.mode "local" }}
---
apiVersion: v1
kind: Service
metadata:
  name: netbox
spec:
  ports:
    - port: 8080
      protocol: TCP
      name: http-main
    - port: 8081
      protocol: TCP
      name: http-status
    - port: 9001
      protocol: TCP
      name: supervisord
  selector:
    name: netbox-deployment

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: netbox-deployment
spec:
  selector:
    matchLabels:
      name: netbox-deployment
  replicas: 1
  template:
    metadata:
      labels:
        name: netbox-deployment
    spec:
      containers:
      - name: netbox-container
        image: "{{ $netbox_image }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        stdin: false
        tty: true
        # TODO we should not be using root here
        securityContext:
          runAsGroup: 0
          runAsUser: 0
        ports:
          - name: http-main
            protocol: TCP
            containerPort: 8080
          - name: http-status
            protocol: TCP
            containerPort: 8081
          - name: supervisord
            protocol: TCP
            containerPort: 9001
        envFrom:
          - configMapRef:
              name: process-env
          - configMapRef:
              name: ssl-env
          - configMapRef:
              name: netbox-common-env
          - configMapRef:
              name: netbox-env
          - secretRef:
              name: netbox-secret-env
          - secretRef:
              name: postgres-env
          - secretRef:
              name: redis-env
        env:
          - name: VIRTUAL_HOST
            value: "netbox.malcolm.local"
        livenessProbe:
          exec:
            command:
            - /usr/local/bin/container_health.sh
          initialDelaySeconds: 600
          periodSeconds: 60
          timeoutSeconds: 15
          successThreshold: 1
          failureThreshold: 10
        volumeMounts:
          - mountPath: /var/local/ca-trust/configmap
            name: netbox-var-local-catrust-volume
          - mountPath: /opt/netbox-custom-plugins
            name: netbox-custom-plugins-volume
          - mountPath: /opt/netbox/netbox/media
            name: netbox-media-volume
            subPath: netbox/media
      initContainers:
      - name: netbox-dirinit-container
        image: "{{ $dirinit_image }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        stdin: false
        tty: true
        securityContext:
          runAsGroup: 0
          runAsUser: 0
        envFrom:
          - configMapRef:
              name: process-env
        env:
          - name: PUSER_MKDIR
            value: "/data/config:netbox/media"
        volumeMounts:
          - name: netbox-media-volume
            mountPath: "/data/config"
      volumes:
        - name: netbox-var-local-catrust-volume
          configMap:
            name: var-local-catrust
        - name: netbox-custom-plugins-volume
          configMap:
            name: netbox-custom-plugins
        - name: netbox-media-volume
          persistentVolumeClaim:
            claimName: config-claim
{{- end }}
