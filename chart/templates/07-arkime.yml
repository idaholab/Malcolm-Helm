---
apiVersion: v1
data:
  ARKIME_ANALYZE_PCAP_THREADS: "1"
  MANAGE_PCAP_FILES: "false"
  OPENSEARCH_MAX_SHARDS_PER_NODE: "2500"
kind: ConfigMap
metadata:
  name: arkime-env

---
apiVersion: v1
data:
  MAXMIND_GEOIP_DB_LICENSE_KEY: MA==
kind: Secret
metadata:
  name: arkime-secret-env
type: Opaque


---
apiVersion: v1
kind: Service
metadata:
  name: arkime  
spec:
  ports:
    - port: 8005
      protocol: TCP
      name: http
    - port: 8081
      protocol: TCP
      name: wise
  selector:
    name: arkime-deployment

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: arkime-deployment
spec:
  selector:
    matchLabels:
      name: arkime-deployment
  replicas: 1
  template:
    metadata:
      labels:
        name: arkime-deployment
    spec:
      containers:
      - name: arkime-container
        image: "{{ .Values.image.repository }}/arkime:{{ .Values.image.arkime_tag | default .Chart.AppVersion }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        stdin: false
        tty: true
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        ports:
          - name: http
            protocol: TCP
            containerPort: 8005
        envFrom:
          - configMapRef:
              name: process-env
          - configMapRef:
              name: ssl-env
          - configMapRef:
              name: opensearch-env
          - secretRef:
              name: auth-env
          - configMapRef:
              name: upload-common-env
          - configMapRef:
              name: arkime-env
          - secretRef:
              name: arkime-secret-env
        env:
          - name: VIRTUAL_HOST
            value: "arkime.malcolm.local"                
          - name: PCAP_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        livenessProbe:
          httpGet:
            path: /_ns_/nstest.html
            port: 8005
            scheme: HTTP
          initialDelaySeconds: 210
          periodSeconds: 90
          timeoutSeconds: 30
          successThreshold: 1
          failureThreshold: 10
        volumeMounts:
          - mountPath: /opt/arkime/etc/config.orig.ini
            name: arkime-config-default
            subPath: config.ini        
          - mountPath: /var/local/ca-trust/configmap
            name: arkime-var-local-catrust-volume
          - mountPath: /var/local/curlrc/secretmap
            name: arkime-opensearch-curlrc-secret-volume
          - mountPath: "/data/pcap"
            name: arkime-pcap-volume
          - name: arkime-runtime-logs-volume
            mountPath: /opt/arkime/logs
            subPath: "arkime"
{{- if and .Values.external_elasticsearch.enabled .Values.external_elasticsearch.elastic_cert_name }}
          - name: elastic-cert
            mountPath: /usr/local/share/ca-certificates/elastic_ca.crt
            subPath: elastic_ca.crt
{{- end }}
      initContainers:
      - name: arkime-dirinit-container
        image: "{{ .Values.image.repository }}/dirinit:{{ .Values.image.dirinit_tag | default .Chart.AppVersion }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        stdin: false
        tty: true
        envFrom:
          - configMapRef:
              name: process-env
        env:
          - name: PUSER_MKDIR
            value: "/data/pcap:processed;/data/runtime-logs:arkime"
        volumeMounts:
          - name: arkime-pcap-volume
            mountPath: "/data/pcap"
          - name: arkime-runtime-logs-volume
            mountPath: "/data/runtime-logs"
      volumes:
        - name: arkime-config-default
          configMap:
            name: arkime-config
        - name: arkime-var-local-catrust-volume
          configMap:
            name: var-local-catrust
        - name: arkime-opensearch-curlrc-secret-volume
          secret:
            secretName: opensearch-curlrc
        - name: arkime-pcap-volume
          persistentVolumeClaim:
            claimName: pcap-claim
        - name: arkime-runtime-logs-volume
          persistentVolumeClaim:
            claimName: runtime-logs-claim
{{- if and .Values.external_elasticsearch.enabled .Values.external_elasticsearch.elastic_cert_name }}
        - name: elastic-cert
          secret:
            secretName: {{ .Values.external_elasticsearch.elastic_cert_name }}
{{- end }}