{{- $dirinit_image := .Values.image.dirinit_container_override | default (printf "%s/dirinit:%s" .Values.image.repository .Chart.AppVersion) }}
{{- $upload_image := .Values.image.upload_container_override | default (printf "%s/file-upload:%s" .Values.image.repository .Chart.AppVersion) }}
---
apiVersion: v1
kind: Service
metadata:
  name: upload
spec:
  type: ClusterIP
  ports:
    - port: 22
      protocol: TCP
      name: sftp
    - port: 80
      protocol: TCP
      name: http
  selector:
    name: upload-deployment

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: upload-deployment
spec:
  selector:
    matchLabels:
      name: upload-deployment
  replicas: 1
  template:
    metadata:
      labels:
        name: upload-deployment
    spec:
      containers:
      - name: upload-container
        image: "{{ $upload_image }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        stdin: false
        tty: true
        ports:
          - name: sftp
            protocol: TCP
            containerPort: 22
          - name: http
            protocol: TCP
            containerPort: 80
        envFrom:
          - configMapRef:
              name: process-env
          - configMapRef:
              name: ssl-env
          - secretRef:
              name: auth-env
        env:
          - name: VIRTUAL_HOST
            value: "upload.malcolm.local"
        livenessProbe:
          exec:
            command:
            - /usr/local/bin/container_health.sh
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 15
          successThreshold: 1
          failureThreshold: 10
        volumeMounts:
          - mountPath: /var/local/ca-trust/configmap
            name: upload-var-local-catrust-volume
          - mountPath: "/var/www/upload/server/php/chroot/files"
            name: upload-pcap-volume
            subPath: "upload"
      initContainers:
      - name: upload-dirinit-container
        image: "{{ $dirinit_image }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        stdin: false
        tty: true
        securityContext:
          runAsGroup: 0
          runAsUser: 0
        envFrom:
          - configMapRef:
              name: process-env
        env:
          - name: PUSER_MKDIR
            value: "/data/pcap:upload/tmp/spool,upload/variants"
        volumeMounts:
          - name: upload-pcap-volume
            mountPath: "/data/pcap"
      volumes:
        - name: upload-var-local-catrust-volume
          configMap:
            name: var-local-catrust
        - name: upload-pcap-volume
          persistentVolumeClaim:
            claimName: pcap-claim
