{{- $dirinit_image := .Values.image.dirinit_container_override | default (printf "%s/dirinit:%s" .Values.image.repository .Chart.AppVersion) }}
{{- $pcap_monitor_image := .Values.image.pcap_monitor_container_override | default (printf "%s/pcap-monitor:%s" .Values.image.repository .Chart.AppVersion) }}
---
apiVersion: v1
kind: Service
metadata:
  name: pcap-monitor
spec:
  ports:
    - port: 30441
      protocol: TCP
      name: zmq
  selector:
    name: pcap-monitor-deployment

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pcap-monitor-deployment
spec:
  selector:
    matchLabels:
      name: pcap-monitor-deployment
  replicas: 1
  template:
    metadata:
      labels:
        name: pcap-monitor-deployment
    spec:
      containers:
      - name: pcap-monitor-container
        image: "{{ $pcap_monitor_image }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        stdin: false
        tty: true
        env:
          - name: PCAP_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        ports:
          - name: zmq
            protocol: TCP
            containerPort: 30441
        envFrom:
          - configMapRef:
              name: process-env
          - configMapRef:
              name: ssl-env
          - configMapRef:
              name: opensearch-env
          - configMapRef:
              name: upload-common-env
        livenessProbe:
          exec:
            command:
            - supervisorctl
            - status
            - watch-upload
            - pcap-publisher
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 15
          successThreshold: 1
          failureThreshold: 10
        volumeMounts:
          - mountPath: /var/local/ca-trust/configmap
            name: pcap-monitor-var-local-catrust-volume
          - mountPath: /var/local/curlrc/secretmap
            name: pcap-monitor-opensearch-curlrc-secret-volume
          - mountPath: "/pcap"
            name: pcap-monitor-pcap-volume
          - mountPath: "/zeek"
            name: pcap-monitor-zeek-volume
      initContainers:
      - name: pcap-monitor-dirinit-container
        image: "{{ $dirinit_image }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        stdin: false
        tty: true
        securityContext:
          runAsGroup: 0
          runAsUser: 0
        envFrom:
          - configMapRef:
              name: process-env
        env:
          - name: PUSER_MKDIR
            value: "/data/pcap:processed,upload"
        volumeMounts:
          - name: pcap-monitor-pcap-volume
            mountPath: "/data/pcap"
      volumes:
        - name: pcap-monitor-var-local-catrust-volume
          configMap:
            name: var-local-catrust
        - name: pcap-monitor-opensearch-curlrc-secret-volume
          secret:
            secretName: opensearch-curlrc
        - name: pcap-monitor-pcap-volume
          persistentVolumeClaim:
            claimName: pcap-claim
        - name: pcap-monitor-zeek-volume
          persistentVolumeClaim:
            claimName: zeek-claim
